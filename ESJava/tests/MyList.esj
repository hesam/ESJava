import polyglot.ext.esj.primitives.*;
import polyglot.ext.esj.tologic.*;

public class MyList extends ESJList<Integer> 
    ensures (no e : this | e < 0) {

    // PREDICATE METHODS    
    predicate public boolean isSorted() {
	all i : indices().allButLast() | get(i) <= get(i+1)
    }
    
    predicate public boolean isPermutationOf(ESJList<Integer> l) {
	all i : int | count(i) == l.count(i)
    }

    // ENSURED METHODS    
    ensured public void bubbleSort() 
	ensures (this.isPermutationOf(this.prime()) && this.isSorted()) {
	System.out.println();
	//int z = 1/0; // <-- TEST: RUN TIME ERROR INTRODUCED
	for(int i=size()-1;i>0;i--) {
	    //for(int i=size()-2;i>0;i--) { // <-- TEST: ASSERTION VIOLATION BUG#1 INTRODUCED
	    for(int j=0;j<i;j++) {
		if (get(j).intValue() > get(i).intValue()) {
		    Integer t = get(i);
		    remove(i);
		    add(i,get(j));
		    remove(j);
		    add(j,t);
		}
	    }
	}
	set(0,0); //<-- TEST: ASSERTION VIOLATION BUG#2
    }
    
    public static void main(String[] args) {
	
	LogMap.SolverOpt_debug(true);

        MyList ta = new MyList();	
        MyList tb = new MyList();
	int [] a = {1,2,3,4,4,5};
	int [] b = {4,3,2,4,5,1};
	for(int i=0;i<a.length;i++) {
	    ta.add(new Integer(a[i]));
	    tb.add(new Integer(b[i]));
	}
	System.out.print("A=");
        System.out.println(ta);
	System.out.print("A sorted: ");
	System.out.println(ta.isSorted());
	System.out.print("B=");
        System.out.println(tb);
	System.out.print("B sorted: ");
	System.out.println(tb.isSorted());
	System.out.print("permutations: ");
	System.out.println(ta.isPermutationOf(tb));
	System.out.println("sorting B...");
	tb.bubbleSort();
	System.out.print("B=");
        System.out.println(tb);
	System.out.print("now B sorted: ");
	System.out.println(tb.isSorted());


    }

}

