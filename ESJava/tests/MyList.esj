import polyglot.ext.esj.primitives.*;
import polyglot.ext.esj.tologic.*;

import java.util.Random;

public class MyList extends ESJList<Integer> {
			    //ensures (no int e : this | e < 0) {

    // SPEC METHODS 
    
    spec public boolean isSorted() {
	all int i : indices().allButLast() | get(i) <= get(i+1)
    }

    spec public boolean isPermutationOf(ESJList<Integer> l) {
	all int i | count(i) == l.count(i)
    }

    // ENSURED METHODS    
    public void bubbleSort() 
	ensures (this.isPermutationOf(this.old()) && this.isSorted()) {
	System.out.println();

	int z = 1/0; // <-- TEST: RUN TIME ERROR INTRODUCED
	for(int i=size()-1;i>0;i--) {
	    //for(int i=size()-2;i>0;i--) { // <-- TEST: ASSERTION VIOLATION BUG#1 INTRODUCED
	    for(int j=0;j<i;j++) {
		if (get(j).intValue() > get(i).intValue()) {
		    Integer t = get(i);
		    remove(i);
		    add(i,get(j));
		    remove(j);
		    add(j,t);
		}
	    }
	}
	set(0,0); //<-- TEST: ASSERTION VIOLATION BUG#2

    }

    /*
    pure public Integer indexOf2(Integer elem)
	ensures (this.old.contains(elem) && result >= 0 && 
		 result < this.old.size() &&
		 this.old.get((Integer) result).equals(elem)) ||
	result == 29 {
	return -2;
    }
    */
    
    public static void main(String[] args) {
	
	LogMap.SolverOpt_debugLevel(1);
	//LogMap.SolverOpt_Kodkodi(true);

        MyList ta = new MyList();	
        MyList tb = new MyList();

	Random rand = new Random(1111L);
	int MAX_SIZE = 10;
	ESJInteger.setBounds(0,MAX_SIZE-1);
	// create an array of the given size
	int[] a = new int[MAX_SIZE];
	  	
	for (int i = 0 ; i < MAX_SIZE; ++i)
	    a[i] = i;
	for (int i = MAX_SIZE; i>0; --i) {
	    int n = rand.nextInt(i);
	    int temp = a[n];
	    a[n] = a[i-1];
	    tb.add(new Integer(temp));
	}


	//int [] a = {1,2,3,4,4,5};
	//int [] b = {4,3,2,4,5,1};
	//for(int i=0;i<a.length;i++) {
	    //ta.add(new Integer(a[i]));
	    //tb.add(new Integer(b[i]));
	//}

	//System.out.print("A=");
        //System.out.println(ta);
	//System.out.print("A sorted: ");
	//System.out.println(ta.isSorted());
	System.out.print("B=");
        System.out.println(tb);
	System.out.print("B sorted: ");
	System.out.println(tb.isSorted());
	//System.out.print("permutations: ");
	//System.out.println(ta.isPermutationOf(tb));

	System.out.println("sorting B...");
	tb.bubbleSort();
	System.out.print("B=");
        System.out.println(tb);
	System.out.print("now B sorted: ");
	System.out.println(tb.isSorted());

	//System.out.println(tb.indexOf2(5));

    }

}

